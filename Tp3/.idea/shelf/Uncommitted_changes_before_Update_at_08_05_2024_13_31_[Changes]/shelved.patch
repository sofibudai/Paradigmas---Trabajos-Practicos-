Index: TP3.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/TP3.iml b/TP3.iml
new file mode 100644
--- /dev/null	(date 1715185218201)
+++ b/TP3.iml	(date 1715185218201)
@@ -0,0 +1,11 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+  </component>
+</module>
\ No newline at end of file
Index: ../Tp2/src/anillo/EmptyRingNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/EmptyRingNode.java b/../Tp2/src/anillo/EmptyRingNode.java
new file mode 100644
--- /dev/null	(date 1715185021370)
+++ b/../Tp2/src/anillo/EmptyRingNode.java	(date 1715185021370)
@@ -0,0 +1,27 @@
+package anillo;
+
+public class EmptyNode extends RingNode {
+
+    public EmptyNode() {
+        super(null);
+    }
+
+    public RingNode next(){
+        throw new RuntimeException();
+    }
+
+    public Object current() {
+        throw new RuntimeException();
+    }
+
+    public RingNode add(Object cargo) {
+        newNode.next = newNode;
+        this.current = newNode;
+    }
+
+    public RingNode remove() {
+        throw new RuntimeException();
+    }
+
+}
+
Index: .idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/vcs.xml b/.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1715185218263)
+++ b/.idea/vcs.xml	(date 1715185218263)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="$PROJECT_DIR$/.." vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../Tp2/src/anillo/NonEmptyRingNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/NonEmptyRingNode.java b/../Tp2/src/anillo/NonEmptyRingNode.java
new file mode 100644
--- /dev/null	(date 1715185021371)
+++ b/../Tp2/src/anillo/NonEmptyRingNode.java	(date 1715185021371)
@@ -0,0 +1,51 @@
+package anillo;
+
+public class NonEmptyNode extends RingNode {
+
+    //definir variable previous
+
+
+    private Object elem;
+    private RingNode next;
+
+    public NonEmptyNode(Object elem) {
+        super(elem);
+        this.next = new EmptyNode();
+    }
+
+    public RingNode next() {
+        this.current = this.current.next;
+        return this;
+    }
+
+    public Object current() {
+        return this.current.elem;
+    }
+
+    public RingNode add(Object cargo) {
+        Node previousNode = this.current;
+        while (previousNode.next != this.current) {  // sacar while
+            previousNode = previousNode.next;
+        }
+        newNode.next = this.current;
+        previousNode.next = newNode;
+        this.current = newNode;
+        return this;
+    }
+
+    public RingNode remove() {
+        if (this.current.next == this.current) {   // sacar if y else
+            this.current = null;
+        } else {
+            Node nodeToRemove = this.current;
+            this.current = nodeToRemove.next;
+            Node previousNode = this.current;
+            while (previousNode.next != nodeToRemove) {
+                previousNode = previousNode.next;
+            }
+            previousNode.next = this.current;
+        }
+        return this;
+    }
+
+}
\ No newline at end of file
Index: .gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.gitignore b/.gitignore
new file mode 100644
--- /dev/null	(date 1715184725962)
+++ b/.gitignore	(date 1715184725962)
@@ -0,0 +1,29 @@
+### IntelliJ IDEA ###
+out/
+!**/src/main/**/out/
+!**/src/test/**/out/
+
+### Eclipse ###
+.apt_generated
+.classpath
+.factorypath
+.project
+.settings
+.springBeans
+.sts4-cache
+bin/
+!**/src/main/**/bin/
+!**/src/test/**/bin/
+
+### NetBeans ###
+/nbproject/private/
+/nbbuild/
+/dist/
+/nbdist/
+/.nb-gradle/
+
+### VS Code ###
+.vscode/
+
+### Mac OS ###
+.DS_Store
\ No newline at end of file
Index: .idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/.gitignore b/.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1715185022554)
+++ b/.idea/.gitignore	(date 1715185022554)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
Index: ../Tp2/src/anillo/Consigna.txt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/Consigna.txt b/../Tp2/src/anillo/Consigna.txt
new file mode 100644
--- /dev/null	(date 1712584670813)
+++ b/../Tp2/src/anillo/Consigna.txt	(date 1712584670813)
@@ -0,0 +1,10 @@
+El objetivo es ejercitar polimorfismo implementando un Anillo.
+
+Hay que hacer pasar todos los tests del ejercicio.
+La implementación del Anillo no debe tener if.
+Deben aplicar todas las técnicas de mejora vistas en clase
+No se pueden modificar los tests.
+
+Ayudas:
+1) Primero hagan pasar todos los tests usando if y después apliquen la
+técnica para sacar que veremos en clase.
Index: ../.idea/.name
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/.name b/../.idea/.name
new file mode 100644
--- /dev/null	(date 1712938657163)
+++ b/../.idea/.name	(date 1712938657163)
@@ -0,0 +1,1 @@
+Paradigmas---Trabajos-Practicos-Tp2
\ No newline at end of file
Index: ../Tp2/src/anillo/RingNode.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/RingNode.java b/../Tp2/src/anillo/RingNode.java
new file mode 100644
--- /dev/null	(date 1715185021375)
+++ b/../Tp2/src/anillo/RingNode.java	(date 1715185021375)
@@ -0,0 +1,16 @@
+package anillo;
+
+public abstract class AbstractRingNode {
+    protected Object elem;
+    protected AbstractRingNode next;
+
+    public AbstractRingNode(Object elem) {
+        this.elem = elem;
+    }
+
+    public abstract AbstractRingNode next();
+    public abstract Object current();
+    public abstract AbstractRingNode add(Object valor);
+    public abstract AbstractRingNode remove();
+
+}
Index: .idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/modules.xml b/.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1715185218217)
+++ b/.idea/modules.xml	(date 1715185218217)
@@ -0,0 +1,8 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/TP3.iml" filepath="$PROJECT_DIR$/TP3.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../Tp2/src/anillo/RingTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/RingTest.java b/../Tp2/src/anillo/RingTest.java
new file mode 100644
--- /dev/null	(date 1712871882913)
+++ b/../Tp2/src/anillo/RingTest.java	(date 1712871882913)
@@ -0,0 +1,106 @@
+package anillo;
+
+import static org.junit.jupiter.api.Assertions.assertEquals;
+import static org.junit.jupiter.api.Assertions.assertThrows;
+import java.time.LocalDate;
+import org.junit.jupiter.api.Test;
+
+public class RingTest {
+    @Test void test00NextOnEmpty() {
+        assertThrows( Exception.class, () -> new Ring().next() );
+    }
+
+    @Test void test01CurrentOnEmpty() {
+        assertThrows( Exception.class, () -> new Ring().current() );
+    }
+
+    @Test void test02CurrentAfterAdd() {
+        assertEquals( "Hola" , new Ring().add( "Hola" ).current() );
+    }
+
+    @Test void test03NextAfterOneAdd() {
+        assertEquals( "Hola" , new Ring().add( "Hola" ).next().current() );
+    }
+
+    @Test void test04CurrentAfterTwoAdds() {
+        assertEquals( 42, new Ring().add( "Hola" )
+                .add( new Integer( 42 ) )
+                .current() );
+    }
+
+    @Test void test05CurrentAndNextAfterTwoAdds() {
+        assertEquals( "Hola", new Ring().add( "Hola" )         // agrega un elemento nuevo al anillo: "hola"
+                .add( new Integer( 42 ) ) // luego agrega otro elemento: 42, en la posicion del "hola"
+                .next()                         // pasa al siguiente elemento: el "hola"
+                .current() );                   // devuelve el elemento actual: "hola"
+    }
+
+    @Test void test06CyclesWithTwoAdds() {
+        assertEquals( 42, new Ring().add( "Hola" )
+                .add( new Integer( 42 ) )
+                .next()
+                .next()
+                .current() );
+    }
+
+    @Test void test07InsertsAfterTwoAdds() {
+        assertEquals( LocalDate.now(), new Ring().add( "Hola" )
+                .add( new Integer( 42 ) )
+                .next()
+                .add( LocalDate.now() )
+                .current() );
+    }
+
+    @Test void test08NextOnInsertsAfterTwoAdds() {
+        assertEquals( "Hola", new Ring().add( "Hola" )                     // agrega un elemento nuevo al anillo: "hola"
+                .add( new Integer( 42 ) )     // luego le agrega otro elemento: 42, en la posicion del "hola"
+                .next()                             // situado en el 42, pasa a ubicarse sobre el siguiente elemento: el "hola"
+                .add( LocalDate.now() )             // agrega la fecha en la posicion del "hola"
+                .next()                             // situado en la fecha, pasa al siguiente elemento: el "hola"
+                .current() );                       // devuelve el elemento actual: "hola"
+
+    }
+
+    @Test void test09CyclesOnTreeElements() {
+        assertEquals( LocalDate.now() , new Ring().add( "Hola" )
+                .add( new Integer( 42 ) )
+                .add( LocalDate.now() )
+                .next()
+                .next()
+                .next()
+                .current() );
+    }
+
+    @Test void test10EmptyaRing() {
+        Ring ring = new Ring().add( "Hola" ).remove();
+
+        assertThrows( Exception.class, () -> ring.current() );
+        assertThrows( Exception.class, () -> ring.next() );
+    }
+
+    @Test void test11RemoveCurrent() {
+        assertEquals( "Hola", new Ring().add( "Hola" )           // agrega un elemento nuevo al anillo: "hola"
+                .add( new Integer( 42 ) )   // luego agrega otro elemento: 42, en la posicion del "hola"
+                .remove()                         // remueve el elemento actual: 42 y el nuevo elemento actual es "hola"
+                .current() );                     // devuelve el elemento actual: "hola"
+    }
+
+    @Test void test12RemoveNext() {
+        assertEquals( "Hola", new Ring().add( "Hola" )           // agrega un elemento nuevo al anillo: "hola"
+                .add( new Integer( 42 ) )   // luego agrega otro elemento: 42, en la posicion del "hola"
+                .add( LocalDate.now() )           // luego agrega otro elemento: la fecha, en la posicion del 42
+                .next()                           // pasa al siguiente elemento: el 42
+                .remove()
+                .current() );                    // remueve el elemento actual: 42 y el nuevo elemento actual es "hola"
+    }
+
+    @Test void test13RemoveLast() {
+        assertEquals( LocalDate.now(), new Ring().add( "Hola" )
+                .add( new Integer( 42 ) )
+                .add( LocalDate.now() )
+                .next()
+                .next()
+                .remove()
+                .current() );
+    }
+}
\ No newline at end of file
Index: ../.idea/uiDesigner.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/uiDesigner.xml b/../.idea/uiDesigner.xml
new file mode 100644
--- /dev/null	(date 1712944345489)
+++ b/../.idea/uiDesigner.xml	(date 1712944345489)
@@ -0,0 +1,124 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="Palette2">
+    <group name="Swing">
+      <item class="com.intellij.uiDesigner.HSpacer" tooltip-text="Horizontal Spacer" icon="/com/intellij/uiDesigner/icons/hspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="1" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="com.intellij.uiDesigner.VSpacer" tooltip-text="Vertical Spacer" icon="/com/intellij/uiDesigner/icons/vspacer.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="1" anchor="0" fill="2" />
+      </item>
+      <item class="javax.swing.JPanel" icon="/com/intellij/uiDesigner/icons/panel.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JScrollPane" icon="/com/intellij/uiDesigner/icons/scrollPane.svg" removable="false" auto-create-binding="false" can-attach-label="true">
+        <default-constraints vsize-policy="7" hsize-policy="7" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JButton" icon="/com/intellij/uiDesigner/icons/button.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="0" fill="1" />
+        <initial-values>
+          <property name="text" value="Button" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JRadioButton" icon="/com/intellij/uiDesigner/icons/radioButton.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="RadioButton" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JCheckBox" icon="/com/intellij/uiDesigner/icons/checkBox.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="3" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="CheckBox" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JLabel" icon="/com/intellij/uiDesigner/icons/label.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="8" fill="0" />
+        <initial-values>
+          <property name="text" value="Label" />
+        </initial-values>
+      </item>
+      <item class="javax.swing.JTextField" icon="/com/intellij/uiDesigner/icons/textField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JPasswordField" icon="/com/intellij/uiDesigner/icons/passwordField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JFormattedTextField" icon="/com/intellij/uiDesigner/icons/formattedTextField.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1">
+          <preferred-size width="150" height="-1" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextArea" icon="/com/intellij/uiDesigner/icons/textArea.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTextPane" icon="/com/intellij/uiDesigner/icons/textPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JEditorPane" icon="/com/intellij/uiDesigner/icons/editorPane.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JComboBox" icon="/com/intellij/uiDesigner/icons/comboBox.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="2" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JTable" icon="/com/intellij/uiDesigner/icons/table.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JList" icon="/com/intellij/uiDesigner/icons/list.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="2" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTree" icon="/com/intellij/uiDesigner/icons/tree.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3">
+          <preferred-size width="150" height="50" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JTabbedPane" icon="/com/intellij/uiDesigner/icons/tabbedPane.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSplitPane" icon="/com/intellij/uiDesigner/icons/splitPane.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="3" hsize-policy="3" anchor="0" fill="3">
+          <preferred-size width="200" height="200" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JSpinner" icon="/com/intellij/uiDesigner/icons/spinner.svg" removable="false" auto-create-binding="true" can-attach-label="true">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSlider" icon="/com/intellij/uiDesigner/icons/slider.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="8" fill="1" />
+      </item>
+      <item class="javax.swing.JSeparator" icon="/com/intellij/uiDesigner/icons/separator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="6" anchor="0" fill="3" />
+      </item>
+      <item class="javax.swing.JProgressBar" icon="/com/intellij/uiDesigner/icons/progressbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JToolBar" icon="/com/intellij/uiDesigner/icons/toolbar.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="6" anchor="0" fill="1">
+          <preferred-size width="-1" height="20" />
+        </default-constraints>
+      </item>
+      <item class="javax.swing.JToolBar$Separator" icon="/com/intellij/uiDesigner/icons/toolbarSeparator.svg" removable="false" auto-create-binding="false" can-attach-label="false">
+        <default-constraints vsize-policy="0" hsize-policy="0" anchor="0" fill="1" />
+      </item>
+      <item class="javax.swing.JScrollBar" icon="/com/intellij/uiDesigner/icons/scrollbar.svg" removable="false" auto-create-binding="true" can-attach-label="false">
+        <default-constraints vsize-policy="6" hsize-policy="0" anchor="0" fill="2" />
+      </item>
+    </group>
+  </component>
+</project>
\ No newline at end of file
Index: ../Tp2/src/anillo/Ring.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/src/anillo/Ring.java b/../Tp2/src/anillo/Ring.java
new file mode 100644
--- /dev/null	(date 1713040446114)
+++ b/../Tp2/src/anillo/Ring.java	(date 1713040446114)
@@ -0,0 +1,33 @@
+package anillo;
+
+public class Ring {
+        private RingNode current = new EmptyRingNode();
+
+    private static class Node {
+        Object elem;
+        Node next;
+
+    Node(Object elem) {
+        this.elem = elem;
+    }
+}
+
+    public Ring next() {
+        current = current.next();
+        return this;
+    }
+
+    public Object current() {
+        return current.current();
+    }
+
+    public Ring add(Object cargo) {
+        current = current.add(cargo);
+        return this;
+    }
+
+    public Ring remove() {
+        current = current.remove();
+        return this;
+    }
+}
Index: .idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/misc.xml b/.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1715185218247)
+++ b/.idea/misc.xml	(date 1715185218247)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectRootManager" version="2" languageLevel="JDK_X" default="true" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+    <output url="file://$PROJECT_DIR$/out" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/modules.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/modules.xml b/../.idea/modules.xml
new file mode 100644
--- /dev/null	(date 1712619317469)
+++ b/../.idea/modules.xml	(date 1712619317469)
@@ -0,0 +1,9 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="ProjectModuleManager">
+    <modules>
+      <module fileurl="file://$PROJECT_DIR$/Paradigmas---Trabajos-Practicos-.iml" filepath="$PROJECT_DIR$/Paradigmas---Trabajos-Practicos-.iml" />
+      <module fileurl="file://$PROJECT_DIR$/Tp2/Tp2.iml" filepath="$PROJECT_DIR$/Tp2/Tp2.iml" />
+    </modules>
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/vcs.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/vcs.xml b/../.idea/vcs.xml
new file mode 100644
--- /dev/null	(date 1712619317548)
+++ b/../.idea/vcs.xml	(date 1712619317548)
@@ -0,0 +1,6 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<project version="4">
+  <component name="VcsDirectoryMappings">
+    <mapping directory="" vcs="Git" />
+  </component>
+</project>
\ No newline at end of file
Index: ../.idea/misc.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/misc.xml b/../.idea/misc.xml
new file mode 100644
--- /dev/null	(date 1712940115201)
+++ b/../.idea/misc.xml	(date 1712940115201)
@@ -0,0 +1,6 @@
+<project version="4">
+    <component name="ProjectRootManager" version="2" languageLevel="JDK_21" project-jdk-name="openjdk-22" project-jdk-type="JavaSDK">
+        <output url="file://$PROJECT_DIR$/out" />
+    </component>
+</project>
+
Index: ../Tp2/Tp2.iml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../Tp2/Tp2.iml b/../Tp2/Tp2.iml
new file mode 100644
--- /dev/null	(date 1712701023560)
+++ b/../Tp2/Tp2.iml	(date 1712701023560)
@@ -0,0 +1,27 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<module type="JAVA_MODULE" version="4">
+  <component name="NewModuleRootManager" inherit-compiler-output="true">
+    <exclude-output />
+    <content url="file://$MODULE_DIR$">
+      <sourceFolder url="file://$MODULE_DIR$/src" isTestSource="false" />
+    </content>
+    <orderEntry type="inheritedJdk" />
+    <orderEntry type="sourceFolder" forTests="false" />
+    <orderEntry type="module-library">
+      <library name="JUnit5.8.1">
+        <CLASSES>
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter/5.8.1/junit-jupiter-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-api/5.8.1/junit-jupiter-api-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/opentest4j/opentest4j/1.2.0/opentest4j-1.2.0.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-commons/1.8.1/junit-platform-commons-1.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/apiguardian/apiguardian-api/1.1.2/apiguardian-api-1.1.2.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-params/5.8.1/junit-jupiter-params-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/jupiter/junit-jupiter-engine/5.8.1/junit-jupiter-engine-5.8.1.jar!/" />
+          <root url="jar://$MAVEN_REPOSITORY$/org/junit/platform/junit-platform-engine/1.8.1/junit-platform-engine-1.8.1.jar!/" />
+        </CLASSES>
+        <JAVADOC />
+        <SOURCES />
+      </library>
+    </orderEntry>
+  </component>
+</module>
\ No newline at end of file
Index: ../.idea/.gitignore
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/../.idea/.gitignore b/../.idea/.gitignore
new file mode 100644
--- /dev/null	(date 1712619356961)
+++ b/../.idea/.gitignore	(date 1712619356961)
@@ -0,0 +1,8 @@
+# Default ignored files
+/shelf/
+/workspace.xml
+# Editor-based HTTP Client requests
+/httpRequests/
+# Datasource local storage ignored files
+/dataSources/
+/dataSources.local.xml
diff --git a/src/Main.java b/src/Main.java
new file mode 100644
